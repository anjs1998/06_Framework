<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.todo.model.mapper.TodoMapper"> <!-- TodoMapper.java -->
<!-- namespace : 연결할 DAO(==Mapper 인터페이스)의 경로를 작성 
	패키지 경로를 포함한 전체 이름으로 작성
	(******namspace는 서버 작동을 위해 꼭 작성해줘야 함!!******)
-->
<!--
아래 태그는 mapper.xml 파일 생성하자마자 삭제할것!
 <cache-ref namespace=""/> -->
  
  
<!-- 태그로 SQL 구문 작성 testTitle()-->
	<select id="testTitle" resultType="string"><!-- todoMapper 인터페이스의 해당 함수 testTitle()로 연결 -->
		SELECT TODO_TITLE FROM TB_TODO
		WHERE TODO_NO = 1
		
		<!-- select문 -->		
	</select>
	
	<!-- 
		<select> 태그 속성
		- id 속성 : 태그를 식별하는 값
		(연결된 Mapper의 메서드명과 동일하게 작성하여 연결)
		-resultType : 조회 결과 한줄(1행)을 저장하여
						반환할 변수/객체 자료형 지정
						
						조회 결과가 여러행이면
						행 별로 변수/객체 자료형으로 저장 후
						모아서 List로 반환
						
	 -->
	 
	 <!-- 할 일 목록 조회 selectAll()-->
	 
	 <select id="selectAll" resultType="Todo"> <!-- todoMapper 인터페이스의 해당 함수 selectAll()로 연결 -->
	 	SELECT TODO_NO, TODO_TITLE, COMPLETE,
		TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') REG_DATE
		FROM TB_TODO
		ORDER BY TODO_NO
	 </select>


	<!-- 완료된 할 일 개수 조회  getCompleteCount()-->
	
	<select id="getCompleteCount" resultType="_int"> <!-- todoMapper 인터페이스의 해당 함수 getCompleteCount()로 연결 -->
		SELECT COUNT(*) 
		FROM TB_TODO
		WHERE COMPLETE = 'Y'
	</select>
	
	
	
	<!-- parameterType
	: 전달 받은 값(전달 인자)의 타입을 명시하는 속성
	-> DTO, Map인 경우 필드명/key를 입력해서 값/value값을 하나씩 꺼내 사용할수 있음
	 -->
	<!-- 할일 추가 -->
	
	<insert id="addTodo" parameterType="Todo"> <!-- parameterType : 전달인자의 타입 (별칭 사용 가능) -->
		INSERT INTO TB_TODO
		VALUES(SEQ_TODO_NO.NEXTVAL, #{todoTitle}, #{todoContent}, DEFAULT, DEFAULT)
	</insert> <!-- #{todoTitle} -> Todo.todoTitle, #{todoContent}  -> Todo.todoContent-->
	<!-- DML인 경우 result은 무조건 int형이기 때문에 resultType 무조건 생략해야함 -->
	
	<!-- mapper.xml에서 java data(파라미터)를 SQL에 삽입하는 방법 
		1)# {변수명|필드명} : SQL에 삽입 시 양쪽에 '' 붙여서 삽입
		
		ex) MEMBER_EMAIL = #{memberEmail}
							-> member01@naver.com
		==============================================================================
		
		2) ${변수명|필드명} : SQL에 삽입시 양쪽에 '' 붙이지 않고 삽입
		
		${} 언제 사용할까?
		1) 삽입할 값이 숫자일 경우
		2) SQL문 자체가 변해야 하는 경우
		
		ex) SELECT MEMBER_NAME, ${key} FROM "MEMBER"
		-> ${key}가 ENROLL_DATE인 경우
		-> SELECT MEMBER_NAME, ENROLL_DATE FROM "MEMBER"
		
		-> ${key}가 MEMBER_ADDRESS 인 경우
		
		-> SELECT MEMBER_NAME, MEMBER_ADDRESS FROM "
	-->
	
	
	<!-- 할일 상세 조회 -->
	<!-- parameterType 은 추론 가능하여 생략해도 됨! -->
	<select id="todoDetail">
		SELECT TODO_NO, TODO_TITLE, TODO_CONTENT, COMPLETE,
		TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') REG_DATE
		FROM TB_TODO
		WHERE TODO_NO = ${todoNo} <!-- todoDetail(int todoNo)의 매개변수 이름을 여기에 대입  -->
	</select>
	
	
	<!-- 완료 여부 변경 -->
	<update id="changeComplete" parameterType="Todo">
		UPDATE TB_TODO SET
		COMPLETE = #{complete} <!-- 문자열에 홑따옴표를 붙이기 위해 #를 사용 -->
		WHERE TODO_NO = #{todoNo} <!-- 숫자는 홑따옴표를 붙이든 안붙이든 상관없음 -->

	</update>
		<!-- 할 일 수정 -->	
		
	<update id="todoUpdate" parameterType = "Todo">
		UPDATE TB_TODO SET
		TODO_TITLE = #{todoTitle},
		TODO_CONTENT = #{todoContent}
		WHERE TODO_NO = #{todoNo}
	</update>
	
	<!--  할일 삭제 -->
	<delete id="todoDelete" parameterType = "Todo">
		DELETE FROM TB_TODO
		WHERE TODO_NO = #{todoNo}
	</delete>
	
	
	<!-- 전체 할일 개수 조회 -->
	<select id="getTotalCount" resultType="_int">
		SELECT COUNT(*) FROM TB_TODO
	</select >

</mapper>
